{"version":3,"sources":["../src/index.ts","../src/scraper.ts","../src/occupations.ts"],"sourcesContent":["import { Command } from 'commander';\r\nimport { getOccupationData } from './occupations';\r\n\r\nexport async function main(filePath: string = process.argv[2]) {\r\n  const data = await getOccupationData(filePath);\r\n  console.log(JSON.stringify(data, null, 2));\r\n  return data;\r\n}\r\n\r\nmain();\r\n","import { readFile } from 'fs/promises';\r\nconst { parse } = require('himalaya');\r\n\r\n/**\r\n *\r\n */\r\nexport const scrape = async (filePath: string) => {\r\n  const dom = (await readFile(filePath)).toString();\r\n  return parse(dom);\r\n};\r\n","import { scrape } from './scraper';\r\n\r\nconst nonNumbers = /[^0-9\\.\\-]/g;\r\n\r\nfunction getCode(code: string) {\r\n  return code.replace('/profile/', '');\r\n}\r\n\r\nfunction getGeo(str: string) {\r\n  const code = str.replace('/profile/geo/', '');\r\n}\r\n\r\nfunction getNumber(str: string) {\r\n  const last = str[str.length - 1];\r\n\r\n  switch (last) {\r\n    case 'K':\r\n    case 'k':\r\n      return parseFloat(str.substring(0, str.length - 1)) * 1000;\r\n    case 'M':\r\n    case 'm':\r\n      return parseFloat(str.substring(0, str.length - 1)) * 1000000;\r\n    case '%':\r\n      return (\r\n        parseFloat(str.replace('âˆ’', '-').substring(0, str.length - 1)) / 100\r\n      );\r\n    default:\r\n      return parseFloat(str.replace('âˆ’', '-').replace(nonNumbers, ''));\r\n  }\r\n}\r\n\r\nexport const getOccupationData = async (fileName: string) => {\r\n  const json = await scrape(fileName);\r\n  const contents =\r\n    json[2].children[3].children[1].children[0].children[0].children[0]\r\n      .children[1].children;\r\n\r\n  const result = {\r\n    workforce: {\r\n      size: getNumber(\r\n        contents[0]?.children[4]?.children[0]?.children[0]?.children[1]?.children[0].content.trim()\r\n      ),\r\n      oneYearGrowth: {\r\n        value: getNumber(\r\n          contents[2]?.children[2]?.children[8]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.content.trim()\r\n        ),\r\n        errorRate: getNumber(\r\n          contents[2]?.children[2]?.children[8]?.children[0]?.children[1]?.children[1]?.children[2]?.children[1]?.content.trim()\r\n        ),\r\n      },\r\n      mostlyEmployedBy: [\r\n        {\r\n          name: contents[1]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.children[1]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[1]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.children[1]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[1]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.children[3]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[1]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.children[3]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[1]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.children[5]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[1]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.children[5]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n      ],\r\n      highestPayingIndustries: [\r\n        {\r\n          name: contents[2]?.children[2]?.children[7]?.children[0]?.children[1]?.children[0]?.children[1]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[2]?.children[2]?.children[7]?.children[0]?.children[1]?.children[0]?.children[1]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[2]?.children[2]?.children[7]?.children[0]?.children[1]?.children[0]?.children[3]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[2]?.children[2]?.children[7]?.children[0]?.children[1]?.children[0]?.children[3]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[2]?.children[2]?.children[7]?.children[0]?.children[1]?.children[0]?.children[5]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[2]?.children[2]?.children[7]?.children[0]?.children[1]?.children[0]?.children[5]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n      ],\r\n      averageSalary: getNumber(\r\n        contents[0]?.children[4]?.children[0]?.children[2]?.children[1]?.children[0].content.trim()\r\n      ),\r\n      averageAge: getNumber(\r\n        contents[0]?.children[4]?.children[0]?.children[1]?.children[1]?.children[0].content.trim()\r\n      ),\r\n    },\r\n    gender: {\r\n      count: {\r\n        male: getNumber(\r\n          contents[3]?.children[2]?.children[0]?.children[0]?.children[1]?.children[0]?.children[0]?.children[0]?.content.trim()\r\n        ),\r\n        female: getNumber(\r\n          contents[3]?.children[2]?.children[0]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.content.trim()\r\n        ),\r\n      },\r\n      averageSalary: {\r\n        male: getNumber(\r\n          contents[0]?.children[4]?.children[0]?.children[3]?.children[1]?.children[0].content.trim()\r\n        ),\r\n        female: getNumber(\r\n          contents[0]?.children[4]?.children[0]?.children[4]?.children[1]?.children[0].content.trim()\r\n        ),\r\n      },\r\n      averageAge: {\r\n        male: getNumber(\r\n          contents[3]?.children[2]?.children[2]?.children[0]?.children[1]?.children[0]?.children[0]?.children[0]?.content.trim()\r\n        ),\r\n        female: getNumber(\r\n          contents[3]?.children[2]?.children[2]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.content.trim()\r\n        ),\r\n      },\r\n    },\r\n    locations: {\r\n      highestEmployment: [\r\n        {\r\n          name: contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[1]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[1]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[3]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[3]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[5]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[5]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n      ],\r\n      highestConcentrations: [\r\n        {\r\n          name: contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[7]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[7]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[9]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[9]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[11]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[1]?.children[1]?.children[0]?.children[0]?.children[2]?.children[0]?.children[11]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n      ],\r\n      highestPaying: [\r\n        {\r\n          name: contents[2]?.children[2]?.children[3]?.children[0]?.children[1]?.children[0]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[2]?.children[2]?.children[3]?.children[0]?.children[1]?.children[0]?.children[1]?.children[0]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[2]?.children[2]?.children[3]?.children[0]?.children[1]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[2]?.children[2]?.children[3]?.children[0]?.children[1]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[2]?.children[2]?.children[3]?.children[0]?.children[1]?.children[0]?.children[1]?.children[2]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[2]?.children[2]?.children[3]?.children[0]?.children[1]?.children[0]?.children[1]?.children[2]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n      ],\r\n      relativelyHighConcentration: [\r\n        {\r\n          name: contents[2]?.children[2]?.children[4]?.children[0]?.children[1]?.children[0]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[2]?.children[2]?.children[4]?.children[0]?.children[1]?.children[0]?.children[1]?.children[0]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[2]?.children[2]?.children[4]?.children[0]?.children[1]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[2]?.children[2]?.children[4]?.children[0]?.children[1]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[2]?.children[2]?.children[4]?.children[0]?.children[1]?.children[0]?.children[1]?.children[2]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          geo: getGeo(\r\n            contents[2]?.children[2]?.children[4]?.children[0]?.children[1]?.children[0]?.children[1]?.children[2]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n    ethnicity: {\r\n      mostCommon: [\r\n        contents[3]?.children[2]?.children[1]?.children[0]?.children[1]?.children[0]?.children[1]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n        contents[3]?.children[2]?.children[1]?.children[0]?.children[1]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.content.trim(),\r\n        contents[3]?.children[2]?.children[1]?.children[0]?.children[1]?.children[0]?.children[1]?.children[2]?.children[0]?.children[0]?.content.trim(),\r\n      ],\r\n    },\r\n    skills: {\r\n      mostCommonMajors: [\r\n        {\r\n          name: contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[0]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[0]?.children[1]?.children[0]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[0]?.children[1]?.children[1]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[0]?.children[1]?.children[2]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[0]?.children[1]?.children[2]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n      ],\r\n      mostSpecializedMajors: [\r\n        {\r\n          name: contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[1]?.children[1]?.children[0]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[1]?.children[1]?.children[0]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[1]?.children[1]?.children[1]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[1]?.children[1]?.children[1]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n        {\r\n          name: contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[1]?.children[1]?.children[2]?.children[0]?.children[0]?.children[0]?.content.trim(),\r\n          code: getCode(\r\n            contents[4]?.children[2]?.children[0]?.children[0]?.children[3]?.children[1]?.children[1]?.children[2]?.children[0]?.children[0]?.attributes[0]?.value.trim()\r\n          ),\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return result;\r\n};\r\n"],"mappings":"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","names":[]}